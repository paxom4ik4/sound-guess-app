{"version":3,"sources":["components/header/index.js","components/header/header.js","components/player/index.js","components/player/player.js","components/current-question-block/index.js","components/current-question-block/current-question-block.js","components/constants.js","components/choose-answer-block/index.js","components/choose-answer-block/choose-answer-block.js","components/description/index.js","components/description/description.js","components/next-level-button/index.js","components/next-level-button/next-level-button.js","components/restart/index.js","components/restart/restart.js","components/finish-game/index.js","components/finish-game/finish-game.js","components/training-mode/index.js","components/training-mode/training-mode.js","components/start-page/index.js","components/start-page/start-page.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","state","score","props","items","document","querySelectorAll","forEach","elem","classList","remove","this","currentStage","add","Fragment","className","href","nextProps","prevState","Component","Player","isGuessed","console","log","src","playing","stop","showSkipControls","showJumpControls","autoPlayAfterSrcChange","customControlsSection","RHAP_UI","VOLUME_CONTROLS","ADDITIONAL_CONTROLS","MAIN_CONTROLS","customProgressBarSection","PROGRESS_BAR","customAdditionalControls","layout","CurrentQuestion","imgSrc","audioSrc","alt","name","imgageSrc","Nature","ruName","audSrc","desc","id","PublicTransport","Transport","Animals","Birds","Songs","ChooseAnswer","content","map","key","onClick","e","onItemClickCorrect","onItemClick","Description","NextLevelButton","nextLevel","label","lvl","type","disabled","Restart","onRestart","Finish","congrat","Training","trainingItems","item","style","textAlign","onClose","class","StartPage","onStart","App","isStartPage","trainingMode","dataStage","maxScore","targetId","data","currentQuestion","isFinished","correctSound","correct","Audio","volume","play","wrongSound","wrong","setData","setState","nextPropStage","randomItem","nextStage","checkAnswer","persist","target","targetName","textContent","getAttribute","checkAnswerCorrect","onTraining","onGame","closest","setTimeout","Math","floor","random","chooseAnswer","mainContent","ReactDOM","render","getElementById"],"mappings":"4cAEeA,G,wNCEbC,MAAQ,CACNC,MAAO,EAAKC,MAAMD,O,mEAYlB,IAAME,EAAQC,SAASC,iBAAiB,cACxCF,EAAMG,SAAQ,SAACC,GACbA,EAAKC,UAAUC,OAAO,aAExBN,EAAMO,KAAKR,MAAMS,cAAcH,UAAUI,IAAI,Y,+BAErC,IACAX,EAAUS,KAAKV,MAAfC,MA8CR,OA5CE,kBAAC,IAAMY,SAAP,KACE,4BAAQC,UAAU,iBAChB,8BACE,0BAAMA,UAAU,YAAhB,KADF,OAEE,0BAAMA,UAAU,YAAhB,KAFF,QAIA,wCACS,0BAAMA,UAAU,YAAYb,KAGvC,wBAAIa,UAAU,cACZ,wBAAIA,UAAU,oBACZ,uBAAGA,UAAU,YAAYC,KAAK,KAA9B,WAIF,wBAAID,UAAU,aACZ,uBAAGA,UAAU,YAAYC,KAAK,KAA9B,qBAIF,wBAAID,UAAU,aACZ,uBAAGA,UAAU,YAAYC,KAAK,KAA9B,cAIF,wBAAID,UAAU,aACZ,uBAAGA,UAAU,YAAYC,KAAK,KAA9B,YAIF,wBAAID,UAAU,aACZ,uBAAGA,UAAU,YAAYC,KAAK,KAA9B,UAIF,wBAAID,UAAU,aACZ,uBAAGA,UAAU,YAAYC,KAAK,KAA9B,e,gDAvDsBC,EAAWC,GAGzC,OAFIA,EAAUhB,MAAUe,EAAUf,MAE3B,CACLA,MAAOe,EAAUf,W,GATaiB,c,sBCDrBC,G,kNCIbnB,MAAQ,CACNoB,UAAW,EAAKlB,MAAMkB,W,uDAGtBC,QAAQC,KAAKZ,KAAKV,MAAMoB,WADjB,IAECG,EAAQb,KAAKR,MAAbqB,IACR,OACE,kBAAC,IAAD,CACEC,SAAUd,KAAKV,MAAMoB,UACrBK,MAAM,EACNF,IAAKA,EACLG,kBAAkB,EAClBC,kBAAkB,EAClBC,wBAAwB,EACxBC,sBAAuB,CACrBC,IAAQC,gBACRD,IAAQE,oBACRF,IAAQG,eAEVC,yBAA0B,CAACJ,IAAQK,cACnCC,yBAA0B,GAC1BC,OAAO,2B,GAtBqBnB,cCHrBoB,E,4MCGbtC,MAAQ,CACNoB,UAAW,EAAKlB,MAAMkB,W,uDASd,IACAA,EAAcV,KAAKV,MAAnBoB,UADD,EAEsBV,KAAKR,MAA1BqC,EAFD,EAECA,OAAQC,EAFT,EAESA,SAChB,OACE,yBAAK1B,UAAU,0BACb,yBAAKA,UAAU,4BACZM,EACC,yBAAKG,IAAKgB,EAAQE,IAAI,OAAO3B,UAAU,kBAEvC,yBAAKA,UAAU,cAAf,mBAEF,yBAAKA,UAAU,gBACZM,EAAYV,KAAKR,MAAMwC,KAAO,QAInC,yBAAK5B,UAAU,qBACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CAAQS,IAAKiB,EAAUpB,UAAWV,KAAKR,MAAMkB,kB,gDAzBvBJ,EAAWC,GAGzC,OAF4B,IAAxBA,EAAUG,WAAuBJ,EAAUI,UAExC,CACLA,UAAWJ,EAAUI,e,GARkBF,aCJvCyB,EAAY,sBACZH,EAAW,sBAEXI,EAAS,CACb,CACEF,KAAM,OACNG,OAAQ,2BACRN,OAAO,GAAD,OAAKI,EAAL,mBACNG,OAAO,GAAD,OAAKN,EAAL,mBACNO,KAAM,0DACNC,GAAI,GAEN,CACEN,KAAM,OACNG,OAAQ,iCACRN,OAAO,GAAD,OAAKI,EAAL,mBACNG,OAAO,GAAD,OAAKN,EAAL,mBACNO,KACE,yEACFC,GAAI,GAEN,CACEN,KAAM,OACNG,OAAQ,2BACRN,OAAO,GAAD,OAAKI,EAAL,mBACNG,OAAO,GAAD,OAAKN,EAAL,mBACNO,KAAM,sEACNC,GAAI,GAEN,CACEN,KAAM,UACNG,OAAQ,2BACRN,OAAO,GAAD,OAAKI,EAAL,sBACNG,OAAO,GAAD,OAAKN,EAAL,sBACNO,KACE,qKACFC,GAAI,GAEN,CACEN,KAAM,OACNG,OAAQ,iCACRN,OAAO,GAAD,OAAKI,EAAL,mBACNG,OAAO,GAAD,OAAKN,EAAL,mBACNO,KAAM,+DACNC,GAAI,IAIFC,EAAkB,CACtB,CACEP,KAAM,MACNG,OAAQ,6CACRN,OAAO,GAAD,OAAKI,EAAL,4BACNG,OAAO,GAAD,OAAKN,EAAL,4BACNO,KAAM,8CACNC,GAAI,GAEN,CACEN,KAAM,iBACNG,OAAQ,+DACRN,OAAO,GAAD,OAAKI,EAAL,uCACNG,OAAO,GAAD,OAAKN,EAAL,uCACNO,KACE,+FACFC,GAAI,GAEN,CACEN,KAAM,QACNG,OAAQ,iCACRN,OAAO,GAAD,OAAKI,EAAL,8BACNG,OAAO,GAAD,OAAKN,EAAL,8BACNO,KACE,kIACFC,GAAI,GAEN,CACEN,KAAM,OACNG,OAAQ,6CACRN,OAAO,GAAD,OAAKI,EAAL,6BACNG,OAAO,GAAD,OAAKN,EAAL,6BACNO,KACE,qGACFC,GAAI,GAEN,CACEN,KAAM,cACNG,OAAQ,+DACRN,OAAO,GAAD,OAAKI,EAAL,oCACNG,OAAO,GAAD,OAAKN,EAAL,oCACNO,KAAM,oDACNC,GAAI,IAIFE,EAAY,CAChB,CACER,KAAM,MACNG,OAAQ,+DACRN,OAAO,GAAD,OAAKI,EAAL,qBACNG,OAAO,GAAD,OAAKN,EAAL,qBACNO,KAAM,6CACNC,GAAI,GAEN,CACEN,KAAM,aACNG,OAAQ,mDACRN,OAAO,GAAD,OAAKI,EAAL,4BACNG,OAAO,GAAD,OAAKN,EAAL,4BACNO,KACE,iFACFC,GAAI,GAEN,CACEN,KAAM,aACNG,OAAQ,mDACRN,OAAO,GAAD,OAAKI,EAAL,4BACNG,OAAO,GAAD,OAAKN,EAAL,4BACNO,KACE,uEACFC,GAAI,GAEN,CACEN,KAAM,QACNG,OAAQ,6CACRN,OAAO,GAAD,OAAKI,EAAL,uBACNG,OAAO,GAAD,OAAKN,EAAL,uBACNO,KAAM,oEACNC,GAAI,GAEN,CACEN,KAAM,OACNG,OAAQ,6CACRN,OAAO,GAAD,OAAKI,EAAL,sBACNG,OAAO,GAAD,OAAKN,EAAL,sBACNO,KACE,4EACFC,GAAI,IAIFG,EAAU,CACd,CACET,KAAM,OACNG,OAAQ,6CACRN,OAAO,GAAD,OAAKI,EAAL,oBACNG,OAAO,GAAD,OAAKN,EAAL,oBACNO,KACE,kFACFC,GAAI,GAEN,CACEN,KAAM,MACNG,OAAQ,qBACRN,OAAO,GAAD,OAAKI,EAAL,mBACNG,OAAO,GAAD,OAAKN,EAAL,mBACNO,KAAM,8DACNC,GAAI,GAEN,CACEN,KAAM,MACNG,OAAQ,uCACRN,OAAO,GAAD,OAAKI,EAAL,mBACNG,OAAO,GAAD,OAAKN,EAAL,mBACNO,KAAM,8CACNC,GAAI,GAEN,CACEN,KAAM,MACNG,OAAQ,2BACRN,OAAO,GAAD,OAAKI,EAAL,mBACNG,OAAO,GAAD,OAAKN,EAAL,mBACNO,KACE,gGACFC,GAAI,GAEN,CACEN,KAAM,QACNG,OAAQ,2BACRN,OAAO,GAAD,OAAKI,EAAL,qBACNG,OAAO,GAAD,OAAKN,EAAL,qBACNO,KACE,kFACFC,GAAI,IAIFI,EAAQ,CACZ,CACEV,KAAM,OACNG,OAAQ,iCACRN,OAAO,GAAD,OAAKI,EAAL,kBACNG,OAAO,GAAD,OAAKN,EAAL,kBACNO,KAAM,qEACNC,GAAI,GAEN,CACEN,KAAM,OACNG,OAAQ,uCACRN,OAAO,GAAD,OAAKI,EAAL,kBACNG,OAAO,GAAD,OAAKN,EAAL,kBACNO,KACE,uEACFC,GAAI,GAEN,CACEN,KAAM,QACNG,OAAQ,2BACRN,OAAO,GAAD,OAAKI,EAAL,mBACNG,OAAO,GAAD,OAAKN,EAAL,mBACNO,KAAM,qEACNC,GAAI,GAEN,CACEN,KAAM,SACNG,OAAQ,uCACRN,OAAO,GAAD,OAAKI,EAAL,oBACNG,OAAO,GAAD,OAAKN,EAAL,oBACNO,KACE,mIACFC,GAAI,GAEN,CACEN,KAAM,MACNG,OAAQ,uCACRN,OAAO,GAAD,OAAKI,EAAL,iBACNG,OAAO,GAAD,OAAKN,EAAL,iBACNO,KACE,8GACFC,GAAI,IAIFK,EAAQ,CACZ,CACEX,KAAM,iBACNG,OAAQ,sHACRN,OAAO,GAAD,OAAKI,EAAL,gBACNG,OAAO,GAAD,OAAKN,EAAL,gBACNO,KAAM,0DACNC,GAAI,GAEN,CACEN,KAAM,QACNG,OAAQ,mDACRN,OAAO,GAAD,OAAKI,EAAL,gBACNG,OAAO,GAAD,OAAKN,EAAL,gBACNO,KAAM,0DACNC,GAAI,GAEN,CACEN,KAAM,YACNG,OAAQ,YACRN,OAAO,GAAD,OAAKI,EAAL,gBACNG,OAAO,GAAD,OAAKN,EAAL,gBACNO,KAAM,0DACNC,GAAI,GAEN,CACEN,KAAM,cACNG,OAAQ,iCACRN,OAAO,GAAD,OAAKI,EAAL,mBACNG,OAAO,GAAD,OAAKN,EAAL,mBACNO,KAAM,0DACNC,GAAI,GAEN,CACEN,KAAM,aACNG,OAAQ,aACRN,OAAO,GAAD,OAAKI,EAAL,gBACNG,OAAO,GAAD,OAAKN,EAAL,gBACNO,KAAM,0DACNC,GAAI,IC7QOM,G,6KCEH,IAAD,OAEDC,EADY7C,KAAKR,MAAfC,MACcqD,KAAI,SAACjD,EAAMyC,GAC/B,IAAMlC,EACJ,EAAKZ,MAAMS,aAAe,IAAM,EAC5B,kBACA,0BACN,OACE,wBACEG,UAAWA,EACX2C,IAAKT,EACLA,GAAIA,EACJU,QAAS,SAACC,GAEN,EAAKzD,MAAMkB,UACP,EAAKlB,MAAM0D,mBAAmBD,GAC9B,EAAKzD,MAAM2D,YAAYF,KAI/B,0BAAM7C,UAAU,aACd,uBAAGA,UAAU,uBAEdP,EAAKmC,SAIZ,OACE,yBAAK5B,UAAU,iCACb,wBAAIA,UAAU,cAAcyC,Q,GA9BMrC,cCD3B4C,G,kNCGb9D,MAAQ,CACNoB,UAAW,EAAKlB,MAAMkB,W,uDASd,IAAD,EACeV,KAAKR,MAAnBC,EADD,EACCA,MAAO6C,EADR,EACQA,GACP5B,EAAcV,KAAKV,MAAnBoB,UACFmC,EACJ,yBAAKzC,UAAU,aACb,yBAAKA,UAAU,uBACb,yBACES,IAAKH,EAAYjB,EAAM6C,GAAIT,OAAS,+BACpCE,IAAI,OACJ3B,UAAU,2BAEZ,yBAAKA,UAAU,yBACb,kBAAC,EAAD,CAAQS,IAAKpB,EAAM6C,GAAIF,WAI3B,yBAAKhC,UAAU,qBACb,yBAAKA,UAAU,oBACZM,EAAYjB,EAAM6C,GAAIN,KAAO,MAAQvC,EAAM6C,GAAIH,OAAS,OAE3D,yBAAK/B,UAAU,QAAQX,EAAM6C,GAAID,QAKvC,OACE,yBAAKjC,UAAU,+BACZJ,KAAKV,MAAMoB,UACVmC,EAEA,iG,gDArCwBvC,EAAWC,GAGzC,OAF4B,IAAxBA,EAAUG,WAAuBJ,EAAUI,UAExC,CACLA,UAAWJ,EAAUI,e,GARcF,cCF1B6C,G,kNCEb/D,MAAQ,CACNoB,UAAW,EAAKlB,MAAMkB,W,uDAWd,IACA4C,EAActD,KAAKR,MAAnB8D,UACFC,EAA2B,IAAnBvD,KAAKR,MAAMgE,IAAY,kBAAoB,aACzD,OACE,4BACEC,KAAK,SACLrD,UAAU,kBACVsD,UAAW1D,KAAKV,MAAMoB,UACtBsC,QAASM,GAERC,M,gDAlByBjD,EAAWC,GAGzC,OAF4B,IAAxBA,EAAUG,WAAuBJ,EAAUI,UAExC,CACLA,UAAWJ,EAAUI,e,GATkBF,cCD9BmD,E,uKCCH,IAAD,OACP,OACE,4BACEvD,UAAU,kBACV4C,QAAS,kBAAM,EAAKxD,MAAMoE,cAF5B,wB,GAH+BpD,aCAtBqD,G,6KCGX,IAAMC,EACJ,yBAAK1D,UAAU,yBACb,yBACEA,UAAU,kBACVS,IAAI,+BACJkB,IAAI,aAIV,OACE,yBAAK3B,UAAU,oBACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,cAAb,cACA,uBAAGA,UAAU,gBAAb,cACcJ,KAAKR,MAAMD,MADzB,uBAIF,yBAAKa,UAAU,yBACS,KAArBJ,KAAKR,MAAMD,MACVuE,EAEA,uBAAG1D,UAAU,gBAAb,0EAMJ,kBAAC,EAAD,CAASwD,UAAW5D,KAAKR,MAAMoE,iB,GA7BHpD,c,OCDrBuD,G,6KCUH,IAAD,OASDC,EARI,sBACL9B,GADK,YAELK,GAFK,YAGLC,GAHK,YAILC,GAJK,YAKLC,GALK,YAMLC,IAEsBG,KAAI,SAACmB,EAAM3B,GAAQ,IACpCT,EAA+BoC,EAA/BpC,OAAQO,EAAuB6B,EAAvB7B,OAAQJ,EAAeiC,EAAfjC,KAAMK,EAAS4B,EAAT5B,KAC9B,OACE,wBAAIjC,UAAU,4BAA4B2C,IAAKT,GAC7C,yBAAKlC,UAAU,mBACb,yBAAKA,UAAU,mBAAmBS,IAAKgB,EAAQE,IAAI,YACnD,uBAAG3B,UAAU,iBAAiB4B,IAEhC,uBAAG5B,UAAU,iBAAiBiC,GAC9B,kBAAC,EAAD,CAAQxB,IAAKuB,QAInB,OACE,6BACE,yBAAKhC,UAAU,sBACb,yBAAKA,UAAU,kBACb,0BAAM8D,MAAO,CAAEC,UAAW,WAA1B,iCAGA,0BAAM/D,UAAU,aAAa4C,QAAS,kBAAM,EAAKxD,MAAM4E,YACrD,uBAAGC,MAAM,mBAGb,wBAAIjE,UAAU,cAAc4D,GAC5B,0BAAM5D,UAAU,aAAa4C,QAAS,kBAAM,EAAKxD,MAAM4E,YACrD,4BAAQC,MAAM,mBAAd,8B,GApC0B7D,cCTvB8D,G,6KCCH,IAAD,OACP,OACE,yBAAKlE,UAAU,wBACb,wBAAIA,UAAU,YAAd,mBACA,8eASA,4BACEA,UAAU,kBACV4C,QAAS,SAACC,GAAD,OAAO,EAAKzD,MAAM+E,QAAQtB,KAFrC,c,GAd+BzC,cCAxBgE,E,4MCkBblF,MAAQ,CACNmF,aAAa,EACbC,cAAc,EACdC,UAAW,EACX1E,aAAc,EACd2E,SAAU,EACVrF,MAAO,EACPmB,WAAW,EACXmE,SAAU,EACVC,KAAM5C,EACN6C,gBAAiB,OACjBC,YAAY,G,EAYdC,aAAe,WACb,IAAMC,EAAU,IAAIC,MACpBD,EAAQE,OAAS,GACjBF,EAAQrE,IAAM,0BACdqE,EAAQG,Q,EAGVC,WAAa,WACX,IAAMC,EAAQ,IAAIJ,MAClBI,EAAMH,OAAS,GACfG,EAAM1E,IAAM,wBACZ0E,EAAMF,Q,EAGRG,QAAU,WACR,OAAQ,EAAKlG,MAAMqF,WACjB,KAAK,EACH,EAAKc,UAAS,SAACnG,GACb,MAAO,CACLwF,KAAOxF,EAAMwF,KAAOvC,MAGxB,MAEF,KAAK,EACH,EAAKkD,UAAS,SAACnG,GACb,MAAO,CACLwF,KAAOxF,EAAMwF,KAAOtC,MAGxB,MAEF,KAAK,EACH,EAAKiD,UAAS,SAACnG,GACb,MAAO,CACLwF,KAAOxF,EAAMwF,KAAOrC,MAGxB,MAEF,KAAK,EACH,EAAKgD,UAAS,SAACnG,GACb,MAAO,CACLwF,KAAOxF,EAAMwF,KAAOpC,MAGxB,MAEF,KAAK,EACH,EAAK+C,UAAS,SAACnG,GACb,MAAO,CACLwF,KAAOxF,EAAMwF,KAAOnC,MAGxB,MAEF,QACE,EAAK8C,UAAS,SAACnG,GACb,MAAO,CACL0F,WAAa1F,EAAM0F,YAAa,MAGpC,EAAKS,UAAS,SAACnG,GACb,MAAO,CACLwF,KAAOxF,EAAMwF,KAAO5C,Q,EAO9BwD,cAAgB,WACd,EAAKD,UAAS,SAACnG,GACb,MAAO,CACLW,aAAcX,EAAMW,aAAe,EACnC2E,SAAU,EACVrF,MAAOD,EAAMC,MACbmB,WAAW,EACXqE,gBAAiB,EAAKzF,MAAMwF,KAAK,EAAKa,cACtCd,SAAU,O,EAIhBe,UAAY,WACV,EAAKJ,UACL,EAAKE,iB,EAGPG,YAAc,SAAC5C,GACbA,EAAE6C,UACF,IAAMC,EAAS9C,EAAE8C,OACXC,EAAaD,EAAOE,YACpBpB,EAAWkB,EAAOG,aAAa,MAErC,EAAKT,SAAS,CACZZ,SAAUA,IAGRmB,IAAe,EAAK1G,MAAMyF,gBAAgB/C,MAC5C+D,EAAO3F,WAAa,SACpB,EAAK6E,eACL,EAAKQ,UAAS,SAACnG,GACb,MAAO,CACLqF,UAAWrF,EAAMqF,UAAY,EAC7BjE,WAAW,EACXnB,MAAO,EAAKD,MAAMC,MAAQ,EAAKD,MAAMsF,eAIzC,EAAKU,aACL,EAAKG,UAAS,SAACnG,GACb,MAAO,CACLsF,SAAUtF,EAAMsF,SAAW,MAG/BmB,EAAO3F,WAAa,W,EAIxB+F,mBAAqB,SAAClD,GACpB,IACM4B,EADS5B,EAAE8C,OACOG,aAAa,MACrC,EAAKT,SAAS,CACZZ,SAAUA,K,EAIdjB,UAAY,WACV,EAAK6B,UAAS,SAACnG,GACb,MAAO,CACLqF,UAAW,EACX1E,aAAc,EACd2E,SAAU,EACVrF,MAAO,EACPmB,WAAW,EACXmE,SAAU,EACVC,KAAM5C,EACN6C,gBAAiBzF,EAAMwF,KAAK,EAAKa,cACjCX,YAAY,O,EAKlBoB,WAAa,WACX,EAAKX,SAAS,CACZf,cAAc,K,EAGlB2B,OAAS,WACP,EAAKZ,SAAS,CACZf,cAAc,K,EAGlBN,QAAU,WACR,EAAKqB,SAAS,CACZf,cAAc,K,EAGlBH,QAAU,SAACtB,GACSA,EAAE8C,OACWO,QAAQ,OAC1BxG,UAAUI,IAAI,QAC3BqG,YAAW,WACT,EAAKd,SAAS,CAAEhB,aAAa,MAC5B,M,kEA9KgB,IAAD,OAClBzE,KAAKyF,UAAS,SAACnG,GACb,MAAO,CACLyF,gBAAiBzF,EAAMwF,KAAK,EAAKa,oB,mCAKrC,OAAOa,KAAKC,MAAsB,EAAhBD,KAAKE,Y,+BAyKvB/F,QAAQC,IAAIZ,KAAKV,MAAMyF,gBAAgB/C,MADhC,MAE0BhC,KAAKV,MAAMyF,gBAApC/C,EAFD,EAECA,KAAMH,EAFP,EAEOA,OAAQO,EAFf,EAEeA,OAFf,EAG4BpC,KAAKV,MAAhCoB,EAHD,EAGCA,UAAWnB,EAHZ,EAGYA,MAAOuF,EAHnB,EAGmBA,KACpB6B,EACJ,kBAAC,IAAMxG,SAAP,KACE,yBAAKC,UAAU,iBACb,kBAAC,EAAD,CACEM,UAAWA,EACXjB,MAAOqF,EACP3B,YAAanD,KAAK6F,YAClB3C,mBAAoBlD,KAAKmG,mBACzBlG,aAAcD,KAAKV,MAAMW,eAE3B,kBAAC,EAAD,CACER,MAAOqF,EACPxC,GAAItC,KAAKV,MAAMuF,SACfnE,UAAWV,KAAKV,MAAMoB,cAMxBkG,EACJ,kBAAC,IAAMzG,SAAP,KACE,kBAAC,EAAD,CAAQZ,MAAOA,EAAOU,aAAcD,KAAKV,MAAMW,eAC/C,yBAAKG,UAAU,sBACb,4BAAQA,UAAU,kBAAkB4C,QAAShD,KAAKqG,QAAlD,QAGA,4BAAQjG,UAAU,kBAAkB4C,QAAShD,KAAKoG,YAAlD,aAIF,kBAAC,EAAD,CACEvE,OAAQA,EACRC,SAAUM,EACVJ,KAAMA,EACNtB,UAAWA,IAEZiG,EACD,kBAAC,EAAD,CACEjG,UAAWA,EACX4C,UAAWtD,KAAK4F,UAChBpC,IAAKxD,KAAKV,MAAMW,gBAIhB4C,EACJ,kBAAC,IAAM1C,SAAP,KACGH,KAAKV,MAAM0F,WACV,kBAAC,EAAD,CAAQzF,MAAOS,KAAKV,MAAMC,MAAOqE,UAAW5D,KAAK4D,YAEjDgD,GAWN,OAPgB5G,KAAKV,MAAMoF,aACzB,kBAAC,EAAD,CAAUN,QAASpE,KAAKoE,UACtBpE,KAAKV,MAAMmF,YACb,kBAAC,EAAD,CAAWF,QAASvE,KAAKuE,UAEzB1B,M,GA5P2BrC,a,MCdjCqG,IAASC,OAAO,kBAAC,EAAD,MAASpH,SAASqH,eAAe,W","file":"static/js/main.82d15acc.chunk.js","sourcesContent":["import Header from \"./header\";\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport \"./header.css\";\r\n\r\nexport default class Header extends Component {\r\n  state = {\r\n    score: this.props.score,\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (prevState.score !== nextProps.score) {\r\n    }\r\n    return {\r\n      score: nextProps.score,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const items = document.querySelectorAll(\".page-item\");\r\n    items.forEach((elem) => {\r\n      elem.classList.remove(\"active\");\r\n    });\r\n    items[this.props.currentStage].classList.add(\"active\");\r\n  }\r\n  render() {\r\n    const { score } = this.state;\r\n    const content = (\r\n      <React.Fragment>\r\n        <header className=\"navbar header\">\r\n          <span>\r\n            <span className=\"header-g\">S</span>ound\r\n            <span className=\"header-g\">G</span>uess\r\n          </span>\r\n          <span>\r\n            Score: <span className=\"header-g\">{score}</span>\r\n          </span>\r\n        </header>\r\n        <ul className=\"pagination\">\r\n          <li className=\"page-item active\">\r\n            <a className=\"page-link\" href=\"#\">\r\n              Nature\r\n            </a>\r\n          </li>\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" href=\"#\">\r\n              Public Transport\r\n            </a>\r\n          </li>\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" href=\"#\">\r\n              Transport\r\n            </a>\r\n          </li>\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" href=\"#\">\r\n              Animals\r\n            </a>\r\n          </li>\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" href=\"#\">\r\n              Birds\r\n            </a>\r\n          </li>\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" href=\"#\">\r\n              Songs\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n    return content;\r\n  }\r\n}\r\n","import Player from \"./player\";\r\n\r\nexport default Player;\r\n","import React, { Component } from \"react\";\r\nimport \"./player.css\";\r\nimport AudioPlayer, { RHAP_UI } from \"react-h5-audio-player\";\r\nimport \"react-h5-audio-player/lib/styles.css\";\r\n\r\nexport default class Player extends Component {\r\n  state = {\r\n    isGuessed: this.props.isGuessed,\r\n  };\r\n  render() {\r\n    console.log(!this.state.isGuessed);\r\n    const { src } = this.props;\r\n    return (\r\n      <AudioPlayer\r\n        playing={!this.state.isGuessed}\r\n        stop={true}\r\n        src={src}\r\n        showSkipControls={false}\r\n        showJumpControls={false}\r\n        autoPlayAfterSrcChange={false}\r\n        customControlsSection={[\r\n          RHAP_UI.VOLUME_CONTROLS,\r\n          RHAP_UI.ADDITIONAL_CONTROLS,\r\n          RHAP_UI.MAIN_CONTROLS,\r\n        ]}\r\n        customProgressBarSection={[RHAP_UI.PROGRESS_BAR]}\r\n        customAdditionalControls={[]}\r\n        layout=\"horizontal-reverse\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import CurrentQuestion from \"./current-question-block\";\r\n\r\nexport default CurrentQuestion;\r\n","import React, { Component } from \"react\";\r\nimport \"./current-question-block.css\";\r\nimport Player from \"../player\";\r\n\r\nexport default class CurrentQuestion extends Component {\r\n  state = {\r\n    isGuessed: this.props.isGuessed,\r\n  };\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (prevState.isGuessed === false && nextProps.isGuessed === true) {\r\n    }\r\n    return {\r\n      isGuessed: nextProps.isGuessed,\r\n    };\r\n  }\r\n  render() {\r\n    const { isGuessed } = this.state;\r\n    const { imgSrc, audioSrc } = this.props;\r\n    return (\r\n      <div className=\"quesion-card jumbotron\">\r\n        <div className=\"question-image-container\">\r\n          {isGuessed ? (\r\n            <img src={imgSrc} alt=\"icon\" className=\"quesion-image\" />\r\n          ) : (\r\n            <div className=\"guess-icon\">Guess The Sound</div>\r\n          )}\r\n          <div className=\"quesion-name\">\r\n            {isGuessed ? this.props.name : \"***\"}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"name-player-block\">\r\n          <div className=\"player-container\">\r\n            <Player src={audioSrc} isGuessed={this.props.isGuessed} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const imgageSrc = \"./constants/images/\";\r\nconst audioSrc = \"./constants/sounds/\";\r\n\r\nconst Nature = [\r\n  {\r\n    name: \"Hail\",\r\n    ruName: \"Град\",\r\n    imgSrc: `${imgageSrc}nature/hail.jpg`,\r\n    audSrc: `${audioSrc}nature/hail.mp3`,\r\n    desc: \"Frozen particles from water, usually fall out in autumn\",\r\n    id: 0,\r\n  },\r\n  {\r\n    name: \"Rain\",\r\n    ruName: \"Дождь\",\r\n    imgSrc: `${imgageSrc}nature/rain.jpg`,\r\n    audSrc: `${audioSrc}nature/rain.mp3`,\r\n    desc:\r\n      \"rain is the most common type of rainfall. not typical for dry climates\",\r\n    id: 1,\r\n  },\r\n  {\r\n    name: \"Snow\",\r\n    ruName: \"Снег\",\r\n    imgSrc: `${imgageSrc}nature/snow.jpg`,\r\n    audSrc: `${audioSrc}nature/snow.mp3`,\r\n    desc: \"You can sculpt different figures from the snow, if it is wet enough\",\r\n    id: 2,\r\n  },\r\n  {\r\n    name: \"Thunder\",\r\n    ruName: \"Гром\",\r\n    imgSrc: `${imgageSrc}nature/thunder.jpg`,\r\n    audSrc: `${audioSrc}nature/thunder.mp3`,\r\n    desc:\r\n      \"Lightning is an electrical spark discharge in the atmosphere that occurs during a thunderstorm, manifested by a bright flash of light and an accompanying thunder.\",\r\n    id: 3,\r\n  },\r\n  {\r\n    name: \"Wind\",\r\n    ruName: \"Ветер\",\r\n    imgSrc: `${imgageSrc}nature/wind.jpg`,\r\n    audSrc: `${audioSrc}nature/wind.mp3`,\r\n    desc: \"Wind is a stream of air that moves near the earth's surface.\",\r\n    id: 4,\r\n  },\r\n];\r\n\r\nconst PublicTransport = [\r\n  {\r\n    name: \"Bus\",\r\n    ruName: \"Автобус\",\r\n    imgSrc: `${imgageSrc}public-transport/bus.jpg`,\r\n    audSrc: `${audioSrc}public-transport/bus.mp3`,\r\n    desc: \"Bus is one of the types of public transport\",\r\n    id: 0,\r\n  },\r\n  {\r\n    name: \"Electric Train\",\r\n    ruName: \"Электричка\",\r\n    imgSrc: `${imgageSrc}public-transport/electric-train.jpg`,\r\n    audSrc: `${audioSrc}public-transport/electric-train.mp3`,\r\n    desc:\r\n      \"Electric Train is one of the types of transport. You can go wherever you want between cities\",\r\n    id: 1,\r\n  },\r\n  {\r\n    name: \"Metro\",\r\n    ruName: \"Метро\",\r\n    imgSrc: `${imgageSrc}public-transport/metro.jpg`,\r\n    audSrc: `${audioSrc}public-transport/metro.mp3`,\r\n    desc:\r\n      \"Metro is one of the most popular type of public transport. It is the best way to get from one point of city straight to another\",\r\n    id: 2,\r\n  },\r\n  {\r\n    name: \"Tram\",\r\n    ruName: \"Трамвай\",\r\n    imgSrc: `${imgageSrc}public-transport/tram.jpg`,\r\n    audSrc: `${audioSrc}public-transport/tram.mp3`,\r\n    desc:\r\n      \"Tram is not very popular type transport, but rides is very atmospheric, especially in late evening\",\r\n    id: 3,\r\n  },\r\n  {\r\n    name: \"Trolley Bus\",\r\n    ruName: \"Троллейбус\",\r\n    imgSrc: `${imgageSrc}public-transport/trolley-bus.jpg`,\r\n    audSrc: `${audioSrc}public-transport/trolley-bus.mp3`,\r\n    desc: \"Trolley Bus is same as bus, but more eco-friendly\",\r\n    id: 4,\r\n  },\r\n];\r\n\r\nconst Transport = [\r\n  {\r\n    name: \"Car\",\r\n    ruName: \"Автомобиль\",\r\n    imgSrc: `${imgageSrc}transport/car.jpg`,\r\n    audSrc: `${audioSrc}transport/car.mp3`,\r\n    desc: \"Car is used for driving and getting relax.\",\r\n    id: 0,\r\n  },\r\n  {\r\n    name: \"Helicopter\",\r\n    ruName: \"Вертолет\",\r\n    imgSrc: `${imgageSrc}transport/helicopter.jpg`,\r\n    audSrc: `${audioSrc}transport/helicopter.mp3`,\r\n    desc:\r\n      \"Helicopter is one of the fly types of transport. You can go wherever you want!\",\r\n    id: 1,\r\n  },\r\n  {\r\n    name: \"Motorcycle\",\r\n    ruName: \"Мотоцикл\",\r\n    imgSrc: `${imgageSrc}transport/motorcycle.jpg`,\r\n    audSrc: `${audioSrc}transport/motorcycle.mp3`,\r\n    desc:\r\n      \"Motorcycle is used to get unusual experience! It's amazing to drive.\",\r\n    id: 2,\r\n  },\r\n  {\r\n    name: \"Plain\",\r\n    ruName: \"Самолет\",\r\n    imgSrc: `${imgageSrc}transport/plain.jpg`,\r\n    audSrc: `${audioSrc}transport/plain.mp3`,\r\n    desc: \"Plain is also fly type transport. Its much faster than helicopter\",\r\n    id: 3,\r\n  },\r\n  {\r\n    name: \"Ship\",\r\n    ruName: \"Корабль\",\r\n    imgSrc: `${imgageSrc}transport/ship.jpg`,\r\n    audSrc: `${audioSrc}transport/ship.mp3`,\r\n    desc:\r\n      \"The ship moves on water. You can take a cruise or a trip around the world\",\r\n    id: 4,\r\n  },\r\n];\r\n\r\nconst Animals = [\r\n  {\r\n    name: \"Bear\",\r\n    ruName: \"Медведь\",\r\n    imgSrc: `${imgageSrc}animals/bear.jpg`,\r\n    audSrc: `${audioSrc}animals/bear.mp3`,\r\n    desc:\r\n      \"The bear lives in the forest. A dangerous predatory beast. Hibernates in winter\",\r\n    id: 0,\r\n  },\r\n  {\r\n    name: \"Cat\",\r\n    ruName: \"Кот\",\r\n    imgSrc: `${imgageSrc}animals/cat.jpg`,\r\n    audSrc: `${audioSrc}animals/cat.mp3`,\r\n    desc: \"Lovely pet. Often plays the role of a hero of a meme (2010)\",\r\n    id: 1,\r\n  },\r\n  {\r\n    name: \"Dog\",\r\n    ruName: \"Собака\",\r\n    imgSrc: `${imgageSrc}animals/dog.jpg`,\r\n    audSrc: `${audioSrc}animals/dog.mp3`,\r\n    desc: \"Dog is a friend of man. Pretty smart animal\",\r\n    id: 2,\r\n  },\r\n  {\r\n    name: \"Owl\",\r\n    ruName: \"Сова\",\r\n    imgSrc: `${imgageSrc}animals/owl.jpg`,\r\n    audSrc: `${audioSrc}animals/owl.mp3`,\r\n    desc:\r\n      \"Owls live in the forest. They have good eyesight and can turn their heads almost 360 degrees.\",\r\n    id: 3,\r\n  },\r\n  {\r\n    name: \"Tiger\",\r\n    ruName: \"Тигр\",\r\n    imgSrc: `${imgageSrc}animals/tiger.jpg`,\r\n    audSrc: `${audioSrc}animals/tiger.mp3`,\r\n    desc:\r\n      \"Tiger is a dangerous predator. Develops high speed and has an interesting color\",\r\n    id: 4,\r\n  },\r\n];\r\n\r\nconst Birds = [\r\n  {\r\n    name: \"Crow\",\r\n    ruName: \"Ворон\",\r\n    imgSrc: `${imgageSrc}birds/crow.jpg`,\r\n    audSrc: `${audioSrc}birds/crow.mp3`,\r\n    desc: \"Ravens (lat.Corvus) are a genus of birds from the Corvidae family.\",\r\n    id: 0,\r\n  },\r\n  {\r\n    name: \"Dove\",\r\n    ruName: \"Голубь\",\r\n    imgSrc: `${imgageSrc}birds/dove.jpg`,\r\n    audSrc: `${audioSrc}birds/dove.mp3`,\r\n    desc:\r\n      \"Doves, (lat.Columba), is a genus of birds from the family of pigeons\",\r\n    id: 1,\r\n  },\r\n  {\r\n    name: \"Eagle\",\r\n    ruName: \"Орел\",\r\n    imgSrc: `${imgageSrc}birds/eagle.jpg`,\r\n    audSrc: `${audioSrc}birds/eagle.mp3`,\r\n    desc: \"Eagles (lat.Aquila) are a genus of large birds of the hawk family.\",\r\n    id: 2,\r\n  },\r\n  {\r\n    name: \"Magpie\",\r\n    ruName: \"Сорока\",\r\n    imgSrc: `${imgageSrc}birds/magpie.jpg`,\r\n    audSrc: `${audioSrc}birds/magpie.mp3`,\r\n    desc:\r\n      \"The magpie, or the common magpie, or the European magpie (Latin Pica pica) is a bird of the corvid family from the genus magpie.\",\r\n    id: 3,\r\n  },\r\n  {\r\n    name: \"Tit\",\r\n    ruName: \"Синица\",\r\n    imgSrc: `${imgageSrc}birds/tit.jpg`,\r\n    audSrc: `${audioSrc}birds/tit.mp3`,\r\n    desc:\r\n      \"The great tit, or big tit (lat.Parus major), is a common bird from the tit family, the order of passerines.\",\r\n    id: 4,\r\n  },\r\n];\r\n\r\nconst Songs = [\r\n  {\r\n    name: \"Arctic Monkeys\",\r\n    ruName: \"Арктические обезьяны\",\r\n    imgSrc: `${imgageSrc}songs/am.jpg`,\r\n    audSrc: `${audioSrc}songs/am.mp3`,\r\n    desc: \"This section needs no description. Just enjoy the music\",\r\n    id: 0,\r\n  },\r\n  {\r\n    name: \"Queen\",\r\n    ruName: \"Королева\",\r\n    imgSrc: `${imgageSrc}songs/bf.jpg`,\r\n    audSrc: `${audioSrc}songs/bf.mp3`,\r\n    desc: \"This section needs no description. Just enjoy the music\",\r\n    id: 1,\r\n  },\r\n  {\r\n    name: \"Radiohead\",\r\n    ruName: \"Radiohead\",\r\n    imgSrc: `${imgageSrc}songs/rc.jpg`,\r\n    audSrc: `${audioSrc}songs/rc.mp3`,\r\n    desc: \"This section needs no description. Just enjoy the music\",\r\n    id: 2,\r\n  },\r\n  {\r\n    name: \"The Beatles\",\r\n    ruName: \"Битлз\",\r\n    imgSrc: `${imgageSrc}songs/tb-lb.jpg`,\r\n    audSrc: `${audioSrc}songs/tb-lb.mp3`,\r\n    desc: \"This section needs no description. Just enjoy the music\",\r\n    id: 3,\r\n  },\r\n  {\r\n    name: \"The Smiths\",\r\n    ruName: \"The Smiths\",\r\n    imgSrc: `${imgageSrc}songs/ts.jpg`,\r\n    audSrc: `${audioSrc}songs/ts.mp3`,\r\n    desc: \"This section needs no description. Just enjoy the music\",\r\n    id: 4,\r\n  },\r\n];\r\nexport { Nature, PublicTransport, Transport, Animals, Birds, Songs };\r\n","import ChooseAnswer from \"./choose-answer-block\";\r\n\r\nexport default ChooseAnswer;\r\n","import React, { Component } from \"react\";\r\nimport \"./choose-answer-block.css\";\r\n\r\nexport default class ChooseAnswer extends Component {\r\n  render() {\r\n    const { items } = this.props;\r\n    const content = items.map((elem, id) => {\r\n      const className =\r\n        this.props.currentStage % 2 === 1\r\n          ? \"list-group-item\"\r\n          : \"list-group-item default\";\r\n      return (\r\n        <li\r\n          className={className}\r\n          key={id}\r\n          id={id}\r\n          onClick={(e) => {\r\n            {\r\n              this.props.isGuessed\r\n                ? this.props.onItemClickCorrect(e)\r\n                : this.props.onItemClick(e);\r\n            }\r\n          }}\r\n        >\r\n          <span className=\"indicator\">\r\n            <i className=\"far fa-dot-circle\"></i>\r\n          </span>\r\n          {elem.name}\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"choose-answer-block jumbotron\">\r\n        <ul className=\"list-group\">{content}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Description from \"./description\";\r\n\r\nexport default Description;\r\n","import React, { Component } from \"react\";\r\nimport \"./description.css\";\r\nimport Player from \"../player\";\r\n\r\nexport default class Description extends Component {\r\n  state = {\r\n    isGuessed: this.props.isGuessed,\r\n  };\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (prevState.isGuessed === false && nextProps.isGuessed === true) {\r\n    }\r\n    return {\r\n      isGuessed: nextProps.isGuessed,\r\n    };\r\n  }\r\n  render() {\r\n    const { items, id } = this.props;\r\n    const { isGuessed } = this.state;\r\n    const content = (\r\n      <div className=\"desc-info\">\r\n        <div className=\"desc-question-image\">\r\n          <img\r\n            src={isGuessed ? items[id].imgSrc : \"./constants/images/sound.svg\"}\r\n            alt=\"icon\"\r\n            className=\"desc-description-image\"\r\n          />\r\n          <div className=\"desc-player-container\">\r\n            <Player src={items[id].audSrc} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"name-player-block\">\r\n          <div className=\"description-name\">\r\n            {isGuessed ? items[id].name + \" | \" + items[id].ruName : \"***\"}\r\n          </div>\r\n          <div className=\"desc\">{items[id].desc}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"jumbotron description-block\">\r\n        {this.state.isGuessed ? (\r\n          content\r\n        ) : (\r\n          <span>\r\n            Listen to the sound and choose the correct answer from list\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import NextLevelButton from \"./next-level-button\";\r\n\r\nexport default NextLevelButton;\r\n","import React, { Component } from \"react\";\r\nimport \"./next-level-button.css\";\r\n\r\nexport default class NextLevelButton extends Component {\r\n  state = {\r\n    isGuessed: this.props.isGuessed,\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (prevState.isGuessed === false && nextProps.isGuessed === true) {\r\n    }\r\n    return {\r\n      isGuessed: nextProps.isGuessed,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { nextLevel } = this.props;\r\n    const label = this.props.lvl === 5 ? \"Finish the game\" : \"Next Level\";\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-success\"\r\n        disabled={!this.state.isGuessed}\r\n        onClick={nextLevel}\r\n      >\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import Restart from \"./restart\";\r\n\r\nexport default Restart;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Restart extends Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        className=\"btn btn-success\"\r\n        onClick={() => this.props.onRestart()}\r\n      >\r\n        Restart The Game\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import Finish from \"./finish-game\";\r\n\r\nexport default Finish;\r\n","import React, { Component } from \"react\";\r\nimport Restart from \"../restart\";\r\nimport \"./finish-game.css\";\r\nexport default class Finish extends Component {\r\n  render() {\r\n    const congrat = (\r\n      <div className=\"certificate-container\">\r\n        <img\r\n          className=\"certificate-img\"\r\n          src=\"../constants/certificate.png\"\r\n          alt=\"picture\"\r\n        />\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"finish jumbotron\">\r\n        <div className=\"finish-header\">\r\n          <p className=\"finish-end\"> The End! </p>\r\n          <p className=\"finish-score\">\r\n            You scored {this.props.score} points out of 30!\r\n          </p>\r\n        </div>\r\n        <div className=\"finish-congratulation\">\r\n          {this.props.score === 30 ? (\r\n            congrat\r\n          ) : (\r\n            <p className=\"one-more-txt\">\r\n              Try one more time and reach the maximum result to see\r\n              congratulations\r\n            </p>\r\n          )}\r\n        </div>\r\n        <Restart onRestart={this.props.onRestart} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Training from \"./training-mode\";\r\n\r\nexport default Training;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  PublicTransport,\r\n  Transport,\r\n  Nature,\r\n  Animals,\r\n  Birds,\r\n  Songs,\r\n} from \"../constants\";\r\nimport \"./training-mode.css\";\r\nimport Player from \"../player\";\r\nexport default class Training extends Component {\r\n  render() {\r\n    const data = [\r\n      ...Nature,\r\n      ...PublicTransport,\r\n      ...Transport,\r\n      ...Animals,\r\n      ...Birds,\r\n      ...Songs,\r\n    ];\r\n    const trainingItems = data.map((item, id) => {\r\n      const { imgSrc, audSrc, name, desc } = item;\r\n      return (\r\n        <li className=\"list-group-item list-item\" key={id}>\r\n          <div className=\"training-header\">\r\n            <img className=\"img training-img\" src={imgSrc} alt=\"picture\" />\r\n            <p className=\"training-name\">{name}</p>\r\n          </div>\r\n          <p className=\"training-desc\">{desc}</p>\r\n          <Player src={audSrc} />\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <div className=\"jumbotron training\">\r\n          <div className=\"training-close\">\r\n            <span style={{ textAlign: \"center\" }}>\r\n              You can learn the items here!\r\n            </span>\r\n            <span className=\"close-item\" onClick={() => this.props.onClose()}>\r\n              <i class=\"fas fa-times\"></i>\r\n            </span>\r\n          </div>\r\n          <ul className=\"list-group\">{trainingItems}</ul>\r\n          <span className=\"close-item\" onClick={() => this.props.onClose()}>\r\n            <button class=\"btn btn-primary\">Return to Game Mode</button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import StartPage from './start-page';\r\n\r\nexport default StartPage;","import React, { Component } from \"react\";\r\nimport \"./start-page.css\";\r\nexport default class StartPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"start-page jumbotron\">\r\n        <h1 className=\"logo-txt\">Sound Guess App</h1>\r\n        <p>\r\n          Glad to see you on the page of my application. You have to listen to\r\n          sounds from different categories and guess what these sounds are.\r\n          There are 6 categories in total (Nature, Public transport, Transport,\r\n          Animals, Birds and Songs). They are all easy enough, but if necessary,\r\n          you can turn on the console and see the current word. There is also a\r\n          Training tab on the page. There you can view all the words as cards,\r\n          listen to each and learn if you want. Good luck!\r\n        </p>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={(e) => this.props.onStart(e)}\r\n        >\r\n          Start\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import App from \"./app\";\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport \"./app.css\";\r\nimport Header from \"../header\";\r\nimport QuestionBlock from \"../current-question-block\";\r\nimport {\r\n  PublicTransport,\r\n  Transport,\r\n  Nature,\r\n  Animals,\r\n  Birds,\r\n  Songs,\r\n} from \"../constants\";\r\nimport ChooseAnswer from \"../choose-answer-block\";\r\nimport Description from \"../description\";\r\nimport NextLevelButton from \"../next-level-button\";\r\nimport Finish from \"../finish-game\";\r\nimport Training from \"../training-mode\";\r\nimport StartPage from \"../start-page\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    isStartPage: true,\r\n    trainingMode: false,\r\n    dataStage: 0,\r\n    currentStage: 0,\r\n    maxScore: 5,\r\n    score: 0,\r\n    isGuessed: false,\r\n    targetId: 0,\r\n    data: Nature,\r\n    currentQuestion: \"null\",\r\n    isFinished: false,\r\n  };\r\n  componentDidMount() {\r\n    this.setState((state) => {\r\n      return {\r\n        currentQuestion: state.data[this.randomItem()],\r\n      };\r\n    });\r\n  }\r\n  randomItem() {\r\n    return Math.floor(Math.random() * 5);\r\n  }\r\n  correctSound = () => {\r\n    const correct = new Audio();\r\n    correct.volume = 0.5;\r\n    correct.src = \"./constants/correct.mp3\";\r\n    correct.play();\r\n  };\r\n\r\n  wrongSound = () => {\r\n    const wrong = new Audio();\r\n    wrong.volume = 0.5;\r\n    wrong.src = \"./constants/wrong.mp3\";\r\n    wrong.play();\r\n  };\r\n\r\n  setData = () => {\r\n    switch (this.state.dataStage) {\r\n      case 1: {\r\n        this.setState((state) => {\r\n          return {\r\n            data: (state.data = PublicTransport),\r\n          };\r\n        });\r\n        break;\r\n      }\r\n      case 2: {\r\n        this.setState((state) => {\r\n          return {\r\n            data: (state.data = Transport),\r\n          };\r\n        });\r\n        break;\r\n      }\r\n      case 3: {\r\n        this.setState((state) => {\r\n          return {\r\n            data: (state.data = Animals),\r\n          };\r\n        });\r\n        break;\r\n      }\r\n      case 4: {\r\n        this.setState((state) => {\r\n          return {\r\n            data: (state.data = Birds),\r\n          };\r\n        });\r\n        break;\r\n      }\r\n      case 5: {\r\n        this.setState((state) => {\r\n          return {\r\n            data: (state.data = Songs),\r\n          };\r\n        });\r\n        break;\r\n      }\r\n      default: {\r\n        this.setState((state) => {\r\n          return {\r\n            isFinished: (state.isFinished = true),\r\n          };\r\n        });\r\n        this.setState((state) => {\r\n          return {\r\n            data: (state.data = Nature),\r\n          };\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  };\r\n  nextPropStage = () => {\r\n    this.setState((state) => {\r\n      return {\r\n        currentStage: state.currentStage + 1,\r\n        maxScore: 5,\r\n        score: state.score,\r\n        isGuessed: false,\r\n        currentQuestion: this.state.data[this.randomItem()],\r\n        targetId: 0,\r\n      };\r\n    });\r\n  };\r\n  nextStage = () => {\r\n    this.setData();\r\n    this.nextPropStage();\r\n  };\r\n\r\n  checkAnswer = (e) => {\r\n    e.persist();\r\n    const target = e.target;\r\n    const targetName = target.textContent;\r\n    const targetId = target.getAttribute(\"id\");\r\n\r\n    this.setState({\r\n      targetId: targetId,\r\n    });\r\n\r\n    if (targetName === this.state.currentQuestion.name) {\r\n      target.className += \" right\";\r\n      this.correctSound();\r\n      this.setState((state) => {\r\n        return {\r\n          dataStage: state.dataStage + 1,\r\n          isGuessed: true,\r\n          score: this.state.score + this.state.maxScore,\r\n        };\r\n      });\r\n    } else {\r\n      this.wrongSound();\r\n      this.setState((state) => {\r\n        return {\r\n          maxScore: state.maxScore - 1,\r\n        };\r\n      });\r\n      target.className += \" wrong\";\r\n    }\r\n  };\r\n\r\n  checkAnswerCorrect = (e) => {\r\n    const target = e.target;\r\n    const targetId = target.getAttribute(\"id\");\r\n    this.setState({\r\n      targetId: targetId,\r\n    });\r\n  };\r\n\r\n  onRestart = () => {\r\n    this.setState((state) => {\r\n      return {\r\n        dataStage: 0,\r\n        currentStage: 0,\r\n        maxScore: 5,\r\n        score: 0,\r\n        isGuessed: false,\r\n        targetId: 0,\r\n        data: Nature,\r\n        currentQuestion: state.data[this.randomItem()],\r\n        isFinished: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  onTraining = () => {\r\n    this.setState({\r\n      trainingMode: true,\r\n    });\r\n  };\r\n  onGame = () => {\r\n    this.setState({\r\n      trainingMode: false,\r\n    });\r\n  };\r\n  onClose = () => {\r\n    this.setState({\r\n      trainingMode: false,\r\n    });\r\n  };\r\n  onStart = (e) => {\r\n    const startPage = e.target;\r\n    const startPageDiv = startPage.closest(\"DIV\");\r\n    startPageDiv.classList.add(\"anim\");\r\n    setTimeout(() => {\r\n      this.setState({ isStartPage: false });\r\n    }, 500);\r\n  };\r\n  render() {\r\n    console.log(this.state.currentQuestion.name);\r\n    const { name, imgSrc, audSrc } = this.state.currentQuestion;\r\n    const { isGuessed, score, data } = this.state;\r\n    const chooseAnswer = (\r\n      <React.Fragment>\r\n        <div className=\"choose-answer\">\r\n          <ChooseAnswer\r\n            isGuessed={isGuessed}\r\n            items={data}\r\n            onItemClick={this.checkAnswer}\r\n            onItemClickCorrect={this.checkAnswerCorrect}\r\n            currentStage={this.state.currentStage}\r\n          />\r\n          <Description\r\n            items={data}\r\n            id={this.state.targetId}\r\n            isGuessed={this.state.isGuessed}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n\r\n    const mainContent = (\r\n      <React.Fragment>\r\n        <Header score={score} currentStage={this.state.currentStage} />\r\n        <div className=\"navbar mode-switch\">\r\n          <button className=\"btn btn-success\" onClick={this.onGame}>\r\n            Game\r\n          </button>\r\n          <button className=\"btn btn-success\" onClick={this.onTraining}>\r\n            Training\r\n          </button>\r\n        </div>\r\n        <QuestionBlock\r\n          imgSrc={imgSrc}\r\n          audioSrc={audSrc}\r\n          name={name}\r\n          isGuessed={isGuessed}\r\n        />\r\n        {chooseAnswer}\r\n        <NextLevelButton\r\n          isGuessed={isGuessed}\r\n          nextLevel={this.nextStage}\r\n          lvl={this.state.currentStage}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n    const content = (\r\n      <React.Fragment>\r\n        {this.state.isFinished ? (\r\n          <Finish score={this.state.score} onRestart={this.onRestart} />\r\n        ) : (\r\n          mainContent\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n    const display = this.state.trainingMode ? (\r\n      <Training onClose={this.onClose} />\r\n    ) : this.state.isStartPage ? (\r\n      <StartPage onStart={this.onStart} />\r\n    ) : (\r\n      content\r\n    );\r\n    return display;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}